{"version":3,"sources":["components/layout/Header.js","Store/ActionTypes.js","Store/ActionCreators.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/utils/TextBox.js","Store/ContactReducer.js","Store/handleFetchContacts.js","Store/sagas.js","Store/store.js","components/contacts/AddContact.js","pages/about.js","pages/404.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","FETCH_CONTACTS","doAddContacts","contacts","type","connect","dispatch","deleteInfo","id","payload","deleteContactFromStore","props","_props$contact","contact","name","email","phone","_useState","useState","_useState2","Object","slicedToArray","showContactInfo","setShowContactInfo","onClick","style","cursor","float","color","event","state","toConsumableArray","Fragment","map","contacts_Contact","key","TextBox","label","placeholder","value","tbEvent","error","htmlFor","classnames","is-invalid","onChange","INITIAL_STATE","ContactReducer","arguments","length","undefined","action","concat","addContact","filter","deleteContact","console","log","addContacts","handleFetchContacts","fetchContacts","fetch","then","response","json","result","regenerator_default","wrap","_context","prev","next","call","sent","put","stop","_marked","watchall","all","takeEvery","sagas_marked","logger","createLogger","saga","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSaga","AddContact","setName","_useState3","_useState4","setEmail","_useState5","_useState6","setPhone","_useState7","_useState8","setError","_event$target","target","onSubmit","preventDefault","newContact","uuid","history","push","utils_TextBox","About","NotFound","App","width","align","layout_Header","react_router","exact","path","component","Contacts","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29fc5fd1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ branding }) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"/\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav nav-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/add/contact\">\n                <i className=\"fas fa-plus\" />\n                Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My Contact App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","export const ADD_CONTACT = \"ADD_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const FETCH_CONTACTS = \"FETCH_CONTACTS\";\nexport const ADD_CONTACTS = \"ADD_CONTACTS\";\n","import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  FETCH_CONTACTS,\n  ADD_CONTACTS\n} from \"./ActionTypes\";\n\nconst addContactFromStore = contact => ({\n  type: ADD_CONTACT,\n  payload: contact\n});\n\nconst deleteContactFromStore = id => ({\n  type: DELETE_CONTACT,\n  payload: id\n});\n\nconst doAddContacts = contacts => ({\n  type: ADD_CONTACTS,\n  contacts\n});\n\nconst doFetchContacts = () => ({\n  type: FETCH_CONTACTS\n});\n\nexport {\n  addContactFromStore,\n  deleteContactFromStore,\n  doAddContacts,\n  doFetchContacts\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { deleteContactFromStore } from \"../../Store/ActionCreators\";\nimport { connect } from \"react-redux\";\n// import axios from \"axios\";\n\nconst Contact = props => {\n  const { deleteInfo } = props;\n  const { id, name, email, phone } = props.contact;\n  const [showContactInfo, setShowContactInfo] = useState(true);\n\n  const showInfo = () => {\n    setShowContactInfo(!showContactInfo);\n  };\n\n  return (\n    <div className=\"card card-body mb-3\">\n      <h4>\n        {name}\n        <i\n          className=\"fas fa-sort-down\"\n          onClick={showInfo}\n          style={{ cursor: \"pointer\" }}\n        />\n        <i\n          className=\"fas fa-times\"\n          style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n          onClick={event => deleteInfo(id)}\n        />\n      </h4>\n      {showContactInfo ? (\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">Email: {email}</li>\n          <li className=\"list-group-item\">Phone: {phone}</li>\n        </ul>\n      ) : null}\n    </div>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteInfo: id => dispatch(deleteContactFromStore(id))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Contact);\n","import React from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\n\nconst Contacts = ({ contacts }) => {\n  return (\n    <>\n      <h1 className=\"display-4 mb-2\">\n        <span className=\"text-danger\">Contact</span> List\n      </h1>\n      {contacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: [...state]\n});\n\nexport default connect(mapStateToProps)(Contacts);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextBox = props => {\n  const {\n    label,\n    name,\n    type,\n    className,\n    placeholder,\n    value,\n    tbEvent,\n    error\n  } = props;\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        className={classnames(className, { \"is-invalid\": error })}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={tbEvent}\n        error={error}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextBox.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  tbEvent: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextBox.defaultProps = {\n  type: \"textbox\"\n};\n\nexport default TextBox;\n","import { ADD_CONTACT, DELETE_CONTACT, ADD_CONTACTS } from \"./ActionTypes\";\n\nconst INITIAL_STATE = [];\n\nconst addContact = (state, action) => {\n  return [action.payload, ...state];\n};\n\nconst deleteContact = (state, action) => {\n  const newState = state.filter(contact => contact.id !== action.payload);\n  return newState;\n};\n\nconst addContacts = action => {\n  console.log(action.contacts);\n  return [...action.contacts];\n};\n\nconst ContactReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return addContact(state, action);\n    case DELETE_CONTACT:\n      return deleteContact(state, action);\n    case ADD_CONTACTS:\n      return addContacts(action);\n    default:\n      return [...state];\n  }\n};\n\nexport default ContactReducer;\n","import { call, put } from \"redux-saga/effects\";\nimport { doAddContacts } from \"./ActionCreators\";\n\nconst HN_BASE_URL = \"https://jsonplaceholder.typicode.com/users\";\n\nconst fetchContacts = () =>\n  fetch(HN_BASE_URL).then(response => response.json());\n\nfunction* handleFetchContacts() {\n  const result = yield call(fetchContacts);\n  yield put(doAddContacts(result));\n}\n\nexport { handleFetchContacts };\n","import { takeEvery, all } from \"redux-saga/effects\";\nimport { FETCH_CONTACTS } from \"./ActionTypes\";\nimport { handleFetchContacts } from \"./handleFetchContacts\";\n\nfunction* watchall() {\n  yield all([takeEvery(FETCH_CONTACTS, handleFetchContacts)]);\n}\n\nexport default watchall;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport ContactReducer from \"./ContactReducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\n\nconst logger = createLogger();\nconst saga = createSagaMiddleware();\nconst store = createStore(\n  ContactReducer,\n  undefined,\n  applyMiddleware(saga, logger)\n);\n\nsaga.run(rootSaga);\nexport default store;\n","import React, { useState } from \"react\";\nimport TextBox from \"../utils/TextBox\";\nimport uuid from \"uuid\";\n// import axios from \"axios\";\nimport { addContactFromStore } from \"../../Store/ActionCreators\";\nimport store from \"../../Store/store\";\n\nconst AddContact = props => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [error, setError] = useState({});\n\n  const onChange = event => {\n    const { name, value } = event.target;\n    if (name === \"name\") setName(value);\n    else if (name === \"email\") setEmail(value);\n    else if (name === \"phone\") setPhone(value);\n  };\n\n  const addContact = event => {\n    event.preventDefault();\n    if (name === \"\") {\n      setError({ name: \"Name is required\" });\n      return;\n    } else if (email === \"\") {\n      setError({ email: \"Email is required\" });\n      return;\n    } else if (phone === \"\") {\n      setError({ phone: \"Phone is required\" });\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    };\n    // const response = await axios.post(\n    //   `https://jsonplaceholder.typicode.com/users`,\n    //   {\n    //     name,\n    //     email,\n    //     phone\n    //   }\n    // );\n\n    store.dispatch(addContactFromStore(newContact));\n\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setError({});\n\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"card card-mb3\">\n      <div className=\"card-header\">Add Contact</div>\n      <div className=\"card-body\">\n        <form onSubmit={event => addContact(event)}>\n          <TextBox\n            label=\"Name\"\n            name=\"name\"\n            className=\"form-control form-control-lg\"\n            type=\"text\"\n            placeholder=\"Enter name...\"\n            value={name}\n            tbEvent={event => onChange(event)}\n            error={error.name}\n          />\n\n          <TextBox\n            label=\"Email\"\n            name=\"email\"\n            className=\"form-control form-control-lg\"\n            type=\"email\"\n            placeholder=\"Enter email...\"\n            value={email}\n            tbEvent={event => onChange(event)}\n            error={error.email}\n          />\n          <TextBox\n            label=\"Phone\"\n            name=\"phone\"\n            className=\"form-control form-control-lg\"\n            type=\"text\"\n            placeholder=\"Enter phone...\"\n            value={phone}\n            tbEvent={event => onChange(event)}\n            error={error.phone}\n          />\n          <input\n            className=\"btn btn-light btn-block\"\n            type=\"submit\"\n            value=\"Add Contact\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddContact;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact App</h1>\n      <p className=\"lead\">App to manage contacts</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, we dont have what you are looking for!!!!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./pages/about\";\nimport NotFound from \"./pages/404\";\n\nfunction App() {\n  return (\n    <div className=\"container\" style={{ width: \"600px\", align: \"left\" }}>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Contacts} />\n          <Route exact path=\"/add/contact\" component={AddContact} />\n          <Route exact path=\"/about\" component={About} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/store\";\nimport { doFetchContacts } from \"./Store/ActionCreators\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nstore.dispatch(doFetchContacts());\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}